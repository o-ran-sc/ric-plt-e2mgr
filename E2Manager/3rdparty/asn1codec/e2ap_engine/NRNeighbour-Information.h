/*
 * Copyright 2019 AT&T Intellectual Property
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This source code is part of the near-RT RIC (RAN Intelligent Controller)
 * platform project (RICP).
 */



/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "X2AP-PDU-Contents"
 * 	found in "../../asnFiles/X2AP-PDU-Contents.asn"
 * 	`asn1c -fcompound-names -fincludes-quoted -fno-include-deps -findirect-choice -gen-PER -no-gen-OER -D.`
 */

#ifndef	_NRNeighbour_Information_H_
#define	_NRNeighbour_Information_H_


#include "asn_application.h"

/* Including external dependencies */
#include "asn_SEQUENCE_OF.h"
#include "NRPCI.h"
#include "NRCGI.h"
#include "FiveGS-TAC.h"
#include "TAC.h"
#include "OCTET_STRING.h"
#include "constr_CHOICE.h"
#include "constr_SEQUENCE.h"
#include "constr_SEQUENCE_OF.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NRNeighbour_Information__Member__nRNeighbourModeInfo_PR {
	NRNeighbour_Information__Member__nRNeighbourModeInfo_PR_NOTHING,	/* No components present */
	NRNeighbour_Information__Member__nRNeighbourModeInfo_PR_fdd,
	NRNeighbour_Information__Member__nRNeighbourModeInfo_PR_tdd
	/* Extensions may appear below */
	
} NRNeighbour_Information__Member__nRNeighbourModeInfo_PR;

/* Forward declarations */
struct ProtocolExtensionContainer;
struct FDD_InfoNeighbourServedNRCell_Information;
struct TDD_InfoNeighbourServedNRCell_Information;

/* Forward definitions */
typedef struct NRNeighbour_Information__Member {
	NRPCI_t	 nrpCI;
	NRCGI_t	 nrCellID;
	FiveGS_TAC_t	*fiveGS_TAC;	/* OPTIONAL */
	TAC_t	*configured_TAC;	/* OPTIONAL */
	OCTET_STRING_t	 measurementTimingConfiguration;
	struct NRNeighbour_Information__Member__nRNeighbourModeInfo {
		NRNeighbour_Information__Member__nRNeighbourModeInfo_PR present;
		union NRNeighbour_Information__Member__nRNeighbourModeInfo_u {
			struct FDD_InfoNeighbourServedNRCell_Information	*fdd;
			struct TDD_InfoNeighbourServedNRCell_Information	*tdd;
			/*
			 * This type is extensible,
			 * possible extensions are below.
			 */
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} nRNeighbourModeInfo;
	struct ProtocolExtensionContainer	*iE_Extensions;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NRNeighbour_Information__Member;

/* NRNeighbour-Information */
typedef struct NRNeighbour_Information {
	A_SEQUENCE_OF(NRNeighbour_Information__Member) list;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NRNeighbour_Information_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_NRNeighbour_Information;
extern asn_SET_OF_specifics_t asn_SPC_NRNeighbour_Information_specs_1;
extern asn_TYPE_member_t asn_MBR_NRNeighbour_Information_1[1];
extern asn_per_constraints_t asn_PER_type_NRNeighbour_Information_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _NRNeighbour_Information_H_ */
#include "asn_internal.h"
