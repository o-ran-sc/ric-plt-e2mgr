/*
 * Copyright 2019 AT&T Intellectual Property
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This source code is part of the near-RT RIC (RAN Intelligent Controller)
 * platform project (RICP).
 */



/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "X2AP-CommonDataTypes"
 * 	found in "../../asnFiles/X2AP-CommonDataTypes.asn"
 * 	`asn1c -fcompound-names -fincludes-quoted -fno-include-deps -findirect-choice -gen-PER -no-gen-OER -D.`
 */

#ifndef	_PrivateIE_ID_H_
#define	_PrivateIE_ID_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeInteger.h"
#include "OBJECT_IDENTIFIER.h"
#include "constr_CHOICE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum PrivateIE_ID_PR {
	PrivateIE_ID_PR_NOTHING,	/* No components present */
	PrivateIE_ID_PR_local,
	PrivateIE_ID_PR_global
} PrivateIE_ID_PR;

/* PrivateIE-ID */
typedef struct PrivateIE_ID {
	PrivateIE_ID_PR present;
	union PrivateIE_ID_u {
		long	 local;
		OBJECT_IDENTIFIER_t	 global;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} PrivateIE_ID_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_PrivateIE_ID;
extern asn_CHOICE_specifics_t asn_SPC_PrivateIE_ID_specs_1;
extern asn_TYPE_member_t asn_MBR_PrivateIE_ID_1[2];
extern asn_per_constraints_t asn_PER_type_PrivateIE_ID_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _PrivateIE_ID_H_ */
#include "asn_internal.h"
