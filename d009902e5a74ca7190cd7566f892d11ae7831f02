{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "74326108_d9ac54a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000108
      },
      "writtenOn": "2022-06-15T08:08:04Z",
      "side": 1,
      "message": "pls. change RIC916 -\u003e RIC-916 in the heading of the commit message",
      "revId": "d009902e5a74ca7190cd7566f892d11ae7831f02",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8104aeb0_3c338183",
        "filename": "E2Manager/handlers/httpmsghandlers/delete_all_request_handler_test.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2022-06-14T18:28:59Z",
      "side": 1,
      "message": "Do you think mock.Anything will make assertion less stricter.",
      "range": {
        "startLine": 292,
        "startChar": 34,
        "endLine": 292,
        "endChar": 47
      },
      "revId": "d009902e5a74ca7190cd7566f892d11ae7831f02",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3758fcd4_71731689",
        "filename": "E2Manager/handlers/httpmsghandlers/delete_all_request_handler_test.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 1001119
      },
      "writtenOn": "2022-06-15T10:48:35Z",
      "side": 1,
      "message": "we have added the new param in NodebInfo.StatusUpdateTimeStamp, and in utest we are assigning current time as below:\nnodeb1NotAssociated.StatusUpdateTimeStamp \u003d uint64(time.Now().UnixNano())\n\twriterMock.On(\"UpdateNodebInfo\", mock.Anything).Return(nil)\n\nwhile processing in e2m code , StatusUpdateTimeStamp will update with the different time, if we are mocking on then this is always failing. So to overcome we find a way to mock.anything on this.\n\nPlease suggest if there can be different way to handle.",
      "parentUuid": "8104aeb0_3c338183",
      "range": {
        "startLine": 292,
        "startChar": 34,
        "endLine": 292,
        "endChar": 47
      },
      "revId": "d009902e5a74ca7190cd7566f892d11ae7831f02",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08bd3b62_41068563",
        "filename": "E2Manager/handlers/httpmsghandlers/delete_all_request_handler_test.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2022-06-15T11:09:37Z",
      "side": 1,
      "message": "I think we need to stub time.Now. so that it can be injected from testcase.\n\nThere are few suggestions : https://stackoverflow.com/questions/18970265/is-there-an-easy-way-to-stub-out-time-now-globally-during-test",
      "parentUuid": "3758fcd4_71731689",
      "range": {
        "startLine": 292,
        "startChar": 34,
        "endLine": 292,
        "endChar": 47
      },
      "revId": "d009902e5a74ca7190cd7566f892d11ae7831f02",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c4d7eee_96e414a8",
        "filename": "E2Manager/handlers/httpmsghandlers/delete_all_request_handler_test.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 1000108
      },
      "writtenOn": "2022-06-16T09:44:32Z",
      "side": 1,
      "message": "Dhiraj will enhance this UT next week as per the discussion here, but in order to merge this would like to mark this for now as resolved. \n\nBug report to keep track of this: https://jira.o-ran-sc.org/browse/RIC-921",
      "parentUuid": "08bd3b62_41068563",
      "range": {
        "startLine": 292,
        "startChar": 34,
        "endLine": 292,
        "endChar": 47
      },
      "revId": "d009902e5a74ca7190cd7566f892d11ae7831f02",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "321ad79d_ffc527fa",
        "filename": "E2Manager/handlers/rmrmsghandlers/e2_setup_request_notification_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2022-06-14T18:28:59Z",
      "side": 1,
      "message": "should we replace it with constant",
      "range": {
        "startLine": 223,
        "startChar": 22,
        "endLine": 223,
        "endChar": 37
      },
      "revId": "d009902e5a74ca7190cd7566f892d11ae7831f02",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bcf60f3_181e641f",
        "filename": "E2Manager/handlers/rmrmsghandlers/e2_setup_request_notification_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 1001119
      },
      "writtenOn": "2022-06-15T10:48:35Z",
      "side": 1,
      "message": "Sure",
      "parentUuid": "321ad79d_ffc527fa",
      "range": {
        "startLine": 223,
        "startChar": 22,
        "endLine": 223,
        "endChar": 37
      },
      "revId": "d009902e5a74ca7190cd7566f892d11ae7831f02",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "094f605e_71b46f69",
        "filename": "E2Manager/handlers/rmrmsghandlers/e2_setup_request_notification_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2022-06-15T11:09:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bcf60f3_181e641f",
      "range": {
        "startLine": 223,
        "startChar": 22,
        "endLine": 223,
        "endChar": 37
      },
      "revId": "d009902e5a74ca7190cd7566f892d11ae7831f02",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}